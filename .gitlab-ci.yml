stages:
  - build
  - sync

cache:
  paths:
    - .m2/repository  # For Java Maven dependencies
    - venv/  # For Python virtual environment, if using one

# Job for building Java project in subdirectory1
build_access_dataserver:
  image: 842030182425.dkr.ecr.us-east-1.amazonaws.com/privacera_build_jdk17:main-1.0.0.1-SNAPSHOT-latest
  tags:
    - build-glrunner
  stage: build
  script:
    - cd access/dataserver
    - mvn clean install
  only:
    changes:
      - access/dataserver/**/*


# Job for building Python project in subdirectory3
#build_subdirectory3:
#  stage: build
#  script:
#    - cd subdirectory3
#    - python -m venv venv
#    - source venv/bin/activate
#    - pip install -r requirements.txt
#  only:
#    changes:
#      - subdirectory3/**/*


sync_to_github:
  stage: sync
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh  # Restrict permissions for the .ssh directory
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts  # Set appropriate permissions for known_hosts
  script:
    - git config --global user.name "dbosco"
    - git config --global user.email "bosco@privacera.com"
    - git remote add github git@github.com:privacera/privacera-examples.git
    - git push github main --force
  only:
    - main
